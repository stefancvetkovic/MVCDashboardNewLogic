<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="PerWebRequest" type="SnT.CreditAgricole.APA.Util.UnityPerWebRequestLifetimeManager, SnT.CreditAgricole.APA.Util"/>

      <!--LanguageManager-->
      <typeAlias alias="ILanguageManager" type="SnT.CreditAgricole.APA.DataModel.ILanguageManager, SnT.CreditAgricole.APA.DataModel"/>
      <typeAlias alias="LanguageManager" type="SnT.CreditAgricole.APA.Util.LanguageManager, SnT.CreditAgricole.APA.Util"/>

      <!--Repositories-->

      <typeAlias alias="IDatabaseContext" type="SnT.CreditAgricole.APA.Repositories.IDatabaseContext, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="DatabaseContext" type="SnT.CreditAgricole.APA.Repositories.SnTCreditAgricoleAPAEntities, SnT.CreditAgricole.APA.Repositories"/>

      <typeAlias alias="IDatabaseContextCore" type="SnT.CreditAgricole.APA.Repositories.IDatabaseContextCore, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="DatabaseContextCore" type="SnT.CreditAgricole.APA.Repositories.Entities, SnT.CreditAgricole.APA.Repositories"/>

      <typeAlias alias="IDatabaseContextHR" type="SnT.CreditAgricole.APA.Repositories.IDatabaseContextHR, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="DatabaseContextHR" type="SnT.CreditAgricole.APA.Repositories.APAHR, SnT.CreditAgricole.APA.Repositories"/>

      <typeAlias alias="IUserRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IUserRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="UserRepository" type="SnT.CreditAgricole.APA.Repositories.UserRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IRoleRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IRoleRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="RoleRepository" type="SnT.CreditAgricole.APA.Repositories.RoleRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IApplicationActionRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApplicationActionRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApplicationActionRepository" type="SnT.CreditAgricole.APA.Repositories.ApplicationActionRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IUserTypeRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IUserTypeRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="UserTypeRepository" type="SnT.CreditAgricole.APA.Repositories.UserTypeRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IUserStatusRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IUserStatusRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="UserStatusRepository" type="SnT.CreditAgricole.APA.Repositories.UserStatusRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ILanguageRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ILanguageRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="LanguageRepository" type="SnT.CreditAgricole.APA.Repositories.LanguageRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ILanguageItemRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ILanguageItemRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="LanguageItemRepository" type="SnT.CreditAgricole.APA.Repositories.LanguageItemRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IActionLogRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IActionLogRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ActionLogRepository" type="SnT.CreditAgricole.APA.Repositories.ActionLogRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IApplicationConfigurationRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApplicationConfigurationRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApplicationConfigurationRepository" type="SnT.CreditAgricole.APA.Repositories.ApplicationConfigurationRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ICoreRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ICoreRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="CoreRepository" type="SnT.CreditAgricole.APA.Repositories.CoreRepository, SnT.CreditAgricole.APA.Repositories"/>

      <typeAlias alias="IApaInformationRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApaInformationRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApaInformationRepository" type="SnT.CreditAgricole.APA.Repositories.ApaInformationRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IEmployeeGeneralDataRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IEmployeeGeneralDataRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataRepository" type="SnT.CreditAgricole.APA.Repositories.EmployeeGeneralDataRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGoalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGoalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GoalRepository" type="SnT.CreditAgricole.APA.Repositories.GoalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IMBOIndividualGoalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IMBOIndividualGoalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="MBOIndividualGoalRepository" type="SnT.CreditAgricole.APA.Repositories.MBOIndividualGoalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IMBOEconomicGoalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IMBOEconomicGoalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="MBOEconomicGoalRepository" type="SnT.CreditAgricole.APA.Repositories.MBOEconomicGoalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGoalsCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGoalsCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GoalsCommentRepository" type="SnT.CreditAgricole.APA.Repositories.GoalsCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IOverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IOverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="OverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.OverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IOverallAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IOverallAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="OverallAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.OverallAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGoalsOverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGoalsOverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GoalsOverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.GoalsOverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGoalsOverallAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGoalsOverallAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GoalsOverallAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.GoalsOverallAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ITasksDescriptionRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ITasksDescriptionRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="TasksDescriptionRepository" type="SnT.CreditAgricole.APA.Repositories.TasksDescriptionRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ITasksDescriptionCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ITasksDescriptionCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="TasksDescriptionCommentRepository" type="SnT.CreditAgricole.APA.Repositories.TasksDescriptionCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IIndividualPerformanceAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IIndividualPerformanceAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="IndividualPerformanceAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.IndividualPerformanceAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IIndividualPerformanceAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IIndividualPerformanceAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="IndividualPerformanceAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.IndividualPerformanceAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IProfessionalInterpersonalSkillRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IProfessionalInterpersonalSkillRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ProfessionalInterpersonalSkillRepository" type="SnT.CreditAgricole.APA.Repositories.ProfessionalInterpersonalSkillRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IProfessionalInterpersonalSkillCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IProfessionalInterpersonalSkillCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ProfessionalInterpersonalSkillCommentRepository" type="SnT.CreditAgricole.APA.Repositories.ProfessionalInterpersonalSkillCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillRepository" type="SnT.CreditAgricole.APA.Repositories.SkillRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillLangRepository" type="SnT.CreditAgricole.APA.Repositories.SkillLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillsCategoryLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillsCategoryLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillsCategoryLangRepository" type="SnT.CreditAgricole.APA.Repositories.SkillsCategoryLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillsCategoryRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillsCategoryRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillsCategoryRepository" type="SnT.CreditAgricole.APA.Repositories.SkillsCategoryRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IExpectedSkillsAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IExpectedSkillsAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ExpectedSkillsAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.ExpectedSkillsAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IExpectedSkillsAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IExpectedSkillsAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ExpectedSkillsAppraisalLangRepository" type="SnT.CreditAgricole.APA.Repositories.ExpectedSkillsAppraisalLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IObservedBehaviourRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IObservedBehaviourRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ObservedBehaviourRepository" type="SnT.CreditAgricole.APA.Repositories.ObservedBehaviourRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IObservedBehaviourCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IObservedBehaviourCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ObservedBehaviourCommentRepository" type="SnT.CreditAgricole.APA.Repositories.ObservedBehaviourCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IManagementSkillRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IManagementSkillRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ManagementSkillRepository" type="SnT.CreditAgricole.APA.Repositories.ManagementSkillRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IManagementSkillCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IManagementSkillCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ManagementSkillCommentRepository" type="SnT.CreditAgricole.APA.Repositories.ManagementSkillCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillsBehavioursAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillsBehavioursAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillsBehavioursAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.SkillsBehavioursAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISkillsBehavioursAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISkillsBehavioursAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SkillsBehavioursAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.SkillsBehavioursAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IDevelopmentNeedRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IDevelopmentNeedRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="DevelopmentNeedRepository" type="SnT.CreditAgricole.APA.Repositories.DevelopmentNeedRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IDevelopmentNeedCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IDevelopmentNeedCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCommentRepository" type="SnT.CreditAgricole.APA.Repositories.DevelopmentNeedCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IDevelopmentNeedCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IDevelopmentNeedCatalogRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.DevelopmentNeedCatalogRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IDevelopmentNeedCatalogLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IDevelopmentNeedCatalogLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCatalogLangRepository" type="SnT.CreditAgricole.APA.Repositories.DevelopmentNeedCatalogLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ISynthesisOverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ISynthesisOverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="SynthesisOverallAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.SynthesisOverallAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IOverallAnnualAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IOverallAnnualAppraisalRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="OverallAnnualAppraisalRepository" type="SnT.CreditAgricole.APA.Repositories.OverallAnnualAppraisalRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IOverallAnnualAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IOverallAnnualAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="OverallAnnualAppraisalCommentRepository" type="SnT.CreditAgricole.APA.Repositories.OverallAnnualAppraisalCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IProfessionalDevelopmentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IProfessionalDevelopmentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ProfessionalDevelopmentRepository" type="SnT.CreditAgricole.APA.Repositories.ProfessionalDevelopmentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IProfessionalDevelopmentCommentRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IProfessionalDevelopmentCommentRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ProfessionalDevelopmentCommentRepository" type="SnT.CreditAgricole.APA.Repositories.ProfessionalDevelopmentCommentRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IProfessionalDevelopmentNeedRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IProfessionalDevelopmentNeedRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ProfessionalDevelopmentNeedRepository" type="SnT.CreditAgricole.APA.Repositories.ProfessionalDevelopmentNeedRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IAPAHRRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IAPAHRRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="APAHRRepository" type="SnT.CreditAgricole.APA.Repositories.APAHRRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IAPAEmployeeDataRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IAPAEmployeeDataRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="APAEmployeeDataRepository" type="SnT.CreditAgricole.APA.Repositories.APAEmployeeDataRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IAPARatingRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IAPARatingRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="APARatingRepository" type="SnT.CreditAgricole.APA.Repositories.APARatingRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGeneralDataStatusLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGeneralDataStatusLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GeneralDataStatusLangRepository" type="SnT.CreditAgricole.APA.Repositories.GeneralDataStatusLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IApaInputExceptionRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApaInputExceptionRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApaInputExceptionRepository" type="SnT.CreditAgricole.APA.Repositories.ApaInputExceptionRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IApaInformationStatusRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApaInformationStatusRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApaInformationStatusRepository" type="SnT.CreditAgricole.APA.Repositories.ApaInformationStatusRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IApaInformationStatusLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IApaInformationStatusLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ApaInformationStatusLangRepository" type="SnT.CreditAgricole.APA.Repositories.ApaInformationStatusLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IDevelopmentNeedCatalogLangRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IDevelopmentNeedCatalogLangRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCatalogLangRepository" type="SnT.CreditAgricole.APA.Repositories.DevelopmentNeedCatalogLangRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGeneralDataStatusRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGeneralDataStatusRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GeneralDataStatusRepository" type="SnT.CreditAgricole.APA.Repositories.GeneralDataStatusRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IReportDefinitionRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IReportDefinitionRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="ReportDefinitionRepository" type="SnT.CreditAgricole.APA.Repositories.ReportDefinitionRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ITrainingCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ITrainingCatalogRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="TrainingCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.TrainingCatalogRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="ITrainingAreaRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.ITrainingAreaRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="TrainingAreaRepository" type="SnT.CreditAgricole.APA.Repositories.TrainingAreaRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IEmployeeGeneralDataTrainingAreaRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IEmployeeGeneralDataTrainingAreaRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataTrainingAreaRepository" type="SnT.CreditAgricole.APA.Repositories.EmployeeGeneralDataTrainingAreaRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IEmployeeGeneralDataTrainingCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IEmployeeGeneralDataTrainingCatalogRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataTrainingCatalogRepository" type="SnT.CreditAgricole.APA.Repositories.EmployeeGeneralDataTrainingCatalogRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IEmployeeRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IEmployeeRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="EmployeeRepository" type="SnT.CreditAgricole.APA.Repositories.EmployeeRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IGroupStatusChangeLogRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IGroupStatusChangeLogRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="GroupStatusChangeLogRepository" type="SnT.CreditAgricole.APA.Repositories.GroupStatusChangeLogRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IIndividualDevelopmentPlanRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IIndividualDevelopmentPlanRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="IndividualDevelopmentPlanRepository" type="SnT.CreditAgricole.APA.Repositories.IndividualDevelopmentPlanRepository, SnT.CreditAgricole.APA.Repositories"/>
      <typeAlias alias="IPerformanceImprovementPlanRepository" type="SnT.CreditAgricole.APA.Repositories.Interfaces.IPerformanceImprovementPlanRepository, SnT.CreditAgricole.APA.Repositories.Interfaces"/>
      <typeAlias alias="PerformanceImprovementPlanRepository" type="SnT.CreditAgricole.APA.Repositories.PerformanceImprovementPlanRepository, SnT.CreditAgricole.APA.Repositories"/>
      <!--Business Logic-->
      <typeAlias alias="IUserBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IUserBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="UserBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.UserBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IRoleBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IRoleBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="RoleBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.RoleBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IApplicationActionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApplicationActionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApplicationActionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApplicationActionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IUserTypeBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IUserTypeBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="UserTypeBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.UserTypeBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IUserStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IUserStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="UserStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.UserStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ILanguageBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ILanguageBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="LanguageBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.LanguageBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ILanguageItemBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ILanguageItemBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="LanguageItemBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.LanguageItemBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IActionLogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IActionLogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ActionLogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ActionLogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IApplicationConfigurationBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApplicationConfigurationBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApplicationConfigurationBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApplicationConfigurationBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ICoreBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ICoreBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="CoreBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.CoreBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>

      <typeAlias alias="IApaInformationBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApaInformationBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApaInformationBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApaInformationBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IEmployeeGeneralDataBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IEmployeeGeneralDataBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.EmployeeGeneralDataBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IGoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IComingYearGoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IComingYearGoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ComingYearGoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ComingYearGoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ILastYearGoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ILastYearGoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="LastYearGoalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.LastYearGoalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IOverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IOverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="OverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.OverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IOverallAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IOverallAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="OverallAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.OverallAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IGoalsOverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGoalsOverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GoalsOverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GoalsOverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IGoalsOverallAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGoalsOverallAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GoalsOverallAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GoalsOverallAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ITasksDescriptionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ITasksDescriptionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="TasksDescriptionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.TasksDescriptionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IIndividualPerformanceAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IIndividualPerformanceAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="IndividualPerformanceAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.IndividualPerformanceAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IProfessionalInterpersonalSkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IProfessionalInterpersonalSkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ProfessionalInterpersonalSkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ProfessionalInterpersonalSkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISkillLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISkillLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SkillLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SkillLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISkillsCategoryBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISkillsCategoryBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SkillsCategoryBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SkillsCategoryBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISkillsCategoryLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISkillsCategoryLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SkillsCategoryLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SkillsCategoryLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IExpectedSkillsAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IExpectedSkillsAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ExpectedSkillsAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ExpectedSkillsAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IExpectedSkillsAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IExpectedSkillsAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ExpectedSkillsAppraisalLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ExpectedSkillsAppraisalLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IObservedBehaviourBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IObservedBehaviourBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ObservedBehaviourBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ObservedBehaviourBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IManagementSkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IManagementSkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ManagementSkillBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ManagementSkillBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISkillsBehavioursAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISkillsBehavioursAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SkillsBehavioursAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SkillsBehavioursAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IDevelopmentNeedBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IDevelopmentNeedBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="DevelopmentNeedBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.DevelopmentNeedBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IDevelopmentNeedCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IDevelopmentNeedCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.DevelopmentNeedCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ISynthesisOverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ISynthesisOverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="SynthesisOverallAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.SynthesisOverallAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="OverallAnnualAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.OverallAnnualAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IOverallAnnualAppraisalBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IOverallAnnualAppraisalBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ProfessionalDevelopmentBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ProfessionalDevelopmentBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IProfessionalDevelopmentBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IProfessionalDevelopmentBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ProfessionalDevelopmentNeedBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ProfessionalDevelopmentNeedBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IProfessionalDevelopmentNeedBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IProfessionalDevelopmentNeedBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="APAHRBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.APAHRBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IAPAHRBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IAPAHRBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="APAEmployeeDataBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.APAEmployeeDataBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IAPAEmployeeDataBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IAPAEmployeeDataBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="APARatingBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.APARatingBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IAPARatingBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IAPARatingBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="IGeneralDataStatusLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGeneralDataStatusLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GeneralDataStatusLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GeneralDataStatusLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IApaInputExceptionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApaInputExceptionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApaInputExceptionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApaInputExceptionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IApaInformationStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApaInformationStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApaInformationStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApaInformationStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IApaInformationStatusLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IApaInformationStatusLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ApaInformationStatusLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ApaInformationStatusLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IDevelopmentNeedCatalogLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IDevelopmentNeedCatalogLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="DevelopmentNeedCatalogLangBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.DevelopmentNeedCatalogLangBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IGeneralDataStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGeneralDataStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GeneralDataStatusBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GeneralDataStatusBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IReportDefinitionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IReportDefinitionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="ReportDefinitionBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.ReportDefinitionBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ITrainingCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ITrainingCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="TrainingCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.TrainingCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="ITrainingAreaBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.ITrainingAreaBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="TrainingAreaBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.TrainingAreaBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IEmployeeGeneralDataTrainingAreaBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IEmployeeGeneralDataTrainingAreaBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataTrainingAreaBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.EmployeeGeneralDataTrainingAreaBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IEmployeeGeneralDataTrainingCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IEmployeeGeneralDataTrainingCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="EmployeeGeneralDataTrainingCatalogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.EmployeeGeneralDataTrainingCatalogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IEmployeeBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IEmployeeBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="EmployeeBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.EmployeeBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IGroupStatusChangeLogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IGroupStatusChangeLogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="GroupStatusChangeLogBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.GroupStatusChangeLogBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IIndividualDevelopmentPlanBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IIndividualDevelopmentPlanBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="IndividualDevelopmentPlanBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.IndividualDevelopmentPlanBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <typeAlias alias="IPerformanceImprovementPlanBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.Interfaces.IPerformanceImprovementPlanBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic.Interfaces"/>
      <typeAlias alias="PerformanceImprovementPlanBusinessLogic" type="SnT.CreditAgricole.APA.BusinessLogic.PerformanceImprovementPlanBusinessLogic, SnT.CreditAgricole.APA.BusinessLogic"/>
      <!--Controllers-->
      <typeAlias alias="UserController" type="SnT.CreditAgricole.APA.WebApplication.Controllers.UserController, SnT.CreditAgricole.APA.WebApplication"/>
      <typeAlias alias="RoleAdminController" type="SnT.CreditAgricole.APA.WebApplication.Controllers.RoleAdminController, SnT.CreditAgricole.APA.WebApplication"/>
      <typeAlias alias="LanguageController" type="SnT.CreditAgricole.APA.WebApplication.Controllers.LanguageController, SnT.CreditAgricole.APA.WebApplication"/>
      <typeAlias alias="LanguageItemController" type="SnT.CreditAgricole.APA.WebApplication.Controllers.LanguageItemController, SnT.CreditAgricole.APA.WebApplication"/>
      <!--<typeAlias alias="APAController" type="SnT.CreditAgricole.APA.WebApplication.Controllers.APAController, SnT.CreditAgricole.APA.WebApplication"/>-->
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="IDatabaseContext" mapTo="DatabaseContext">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDatabaseContextCore" mapTo="DatabaseContextCore">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDatabaseContextHR" mapTo="DatabaseContextHR">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILanguageManager" mapTo="LanguageManager">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
              </constructor>
            </typeConfig>
          </type>
          <!--Repositories-->
          <type type="IUserRepository" mapTo="UserRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IRoleRepository" mapTo="RoleRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApplicationActionRepository" mapTo="ApplicationActionRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IUserTypeRepository" mapTo="UserTypeRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IUserStatusRepository" mapTo="UserStatusRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILanguageRepository" mapTo="LanguageRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILanguageItemRepository" mapTo="LanguageItemRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IActionLogRepository" mapTo="ActionLogRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApplicationConfigurationRepository" mapTo="ApplicationConfigurationRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICoreRepository" mapTo="CoreRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContextCore">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>

          <type type="IApaInformationRepository" mapTo="ApaInformationRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataRepository" mapTo="EmployeeGeneralDataRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalsCommentRepository" mapTo="GoalsCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalRepository" mapTo="GoalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMBOIndividualGoalRepository" mapTo="MBOIndividualGoalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMBOEconomicGoalRepository" mapTo="MBOEconomicGoalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAppraisalRepository" mapTo="OverallAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAppraisalLangRepository" mapTo="OverallAppraisalLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalsOverallAppraisalRepository" mapTo="GoalsOverallAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalsOverallAppraisalLangRepository" mapTo="GoalsOverallAppraisalLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITasksDescriptionRepository" mapTo="TasksDescriptionRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITasksDescriptionCommentRepository" mapTo="TasksDescriptionCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IIndividualPerformanceAppraisalRepository" mapTo="IndividualPerformanceAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IIndividualPerformanceAppraisalCommentRepository" mapTo="IndividualPerformanceAppraisalCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalInterpersonalSkillRepository" mapTo="ProfessionalInterpersonalSkillRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalInterpersonalSkillCommentRepository" mapTo="ProfessionalInterpersonalSkillCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillRepository" mapTo="SkillRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsCategoryLangRepository" mapTo="SkillsCategoryLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsCategoryRepository" mapTo="SkillsCategoryRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillLangRepository" mapTo="SkillLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IExpectedSkillsAppraisalRepository" mapTo="ExpectedSkillsAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IExpectedSkillsAppraisalLangRepository" mapTo="ExpectedSkillsAppraisalLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IObservedBehaviourRepository" mapTo="ObservedBehaviourRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IObservedBehaviourCommentRepository" mapTo="ObservedBehaviourCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IManagementSkillRepository" mapTo="ManagementSkillRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IManagementSkillCommentRepository" mapTo="ManagementSkillCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsBehavioursAppraisalRepository" mapTo="SkillsBehavioursAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsBehavioursAppraisalCommentRepository" mapTo="SkillsBehavioursAppraisalCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedRepository" mapTo="DevelopmentNeedRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCommentRepository" mapTo="DevelopmentNeedCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCatalogRepository" mapTo="DevelopmentNeedCatalogRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCatalogLangRepository" mapTo="DevelopmentNeedCatalogLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISynthesisOverallAppraisalRepository" mapTo="SynthesisOverallAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAnnualAppraisalRepository" mapTo="OverallAnnualAppraisalRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAnnualAppraisalCommentRepository" mapTo="OverallAnnualAppraisalCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalDevelopmentRepository" mapTo="ProfessionalDevelopmentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalDevelopmentCommentRepository" mapTo="ProfessionalDevelopmentCommentRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalDevelopmentNeedRepository" mapTo="ProfessionalDevelopmentNeedRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPAHRRepository" mapTo="APAHRRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPAEmployeeDataRepository" mapTo="APAEmployeeDataRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContextHR">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPARatingRepository" mapTo="APARatingRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContextHR">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGeneralDataStatusLangRepository" mapTo="GeneralDataStatusLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInputExceptionRepository" mapTo="ApaInputExceptionRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInformationStatusRepository" mapTo="ApaInformationStatusRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInformationStatusLangRepository" mapTo="ApaInformationStatusLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCatalogLangRepository" mapTo="DevelopmentNeedCatalogLangRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGeneralDataStatusRepository" mapTo="GeneralDataStatusRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IReportDefinitionRepository" mapTo="ReportDefinitionRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITrainingCatalogRepository" mapTo="TrainingCatalogRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITrainingAreaRepository" mapTo="TrainingAreaRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataTrainingAreaRepository" mapTo="EmployeeGeneralDataTrainingAreaRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataTrainingCatalogRepository" mapTo="EmployeeGeneralDataTrainingCatalogRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeRepository" mapTo="EmployeeRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGroupStatusChangeLogRepository" mapTo="GroupStatusChangeLogRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IIndividualDevelopmentPlanRepository" mapTo="IndividualDevelopmentPlanRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IPerformanceImprovementPlanRepository" mapTo="PerformanceImprovementPlanRepository">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="dbContext" parameterType="IDatabaseContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <!--Business logic-->
          <type type="IUserBusinessLogic" mapTo="UserBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IUserRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IRoleBusinessLogic" mapTo="RoleBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IRoleRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApplicationActionBusinessLogic" mapTo="ApplicationActionBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApplicationActionRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IUserTypeBusinessLogic" mapTo="UserTypeBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IUserTypeRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IUserStatusBusinessLogic" mapTo="UserStatusBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IUserStatusRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILanguageBusinessLogic" mapTo="LanguageBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ILanguageRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILanguageItemBusinessLogic" mapTo="LanguageItemBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ILanguageItemRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IActionLogBusinessLogic" mapTo="ActionLogBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IActionLogRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApplicationConfigurationBusinessLogic" mapTo="ApplicationConfigurationBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApplicationConfigurationRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICoreBusinessLogic" mapTo="CoreBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ICoreRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>

          <type type="IApaInformationBusinessLogic" mapTo="ApaInformationBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApaInformationRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataBusinessLogic" mapTo="EmployeeGeneralDataBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IEmployeeGeneralDataRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalBusinessLogic" mapTo="GoalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGoalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IComingYearGoalBusinessLogic" mapTo="ComingYearGoalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGoalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ILastYearGoalBusinessLogic" mapTo="LastYearGoalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGoalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAppraisalBusinessLogic" mapTo="OverallAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IOverallAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAppraisalLangBusinessLogic" mapTo="OverallAppraisalLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IOverallAppraisalLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalsOverallAppraisalBusinessLogic" mapTo="GoalsOverallAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGoalsOverallAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGoalsOverallAppraisalLangBusinessLogic" mapTo="GoalsOverallAppraisalLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGoalsOverallAppraisalLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITasksDescriptionBusinessLogic" mapTo="TasksDescriptionBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ITasksDescriptionRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IIndividualPerformanceAppraisalBusinessLogic" mapTo="IndividualPerformanceAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IIndividualPerformanceAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalInterpersonalSkillBusinessLogic" mapTo="ProfessionalInterpersonalSkillBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IProfessionalInterpersonalSkillRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillBusinessLogic" mapTo="SkillBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISkillRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillLangBusinessLogic" mapTo="SkillLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISkillLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsCategoryLangBusinessLogic" mapTo="SkillsCategoryLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISkillsCategoryLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsCategoryBusinessLogic" mapTo="SkillsCategoryBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISkillsCategoryRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IExpectedSkillsAppraisalBusinessLogic" mapTo="ExpectedSkillsAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IExpectedSkillsAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IExpectedSkillsAppraisalLangBusinessLogic" mapTo="ExpectedSkillsAppraisalLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IExpectedSkillsAppraisalLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IObservedBehaviourBusinessLogic" mapTo="ObservedBehaviourBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IObservedBehaviourRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IManagementSkillBusinessLogic" mapTo="ManagementSkillBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IManagementSkillRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISkillsBehavioursAppraisalBusinessLogic" mapTo="SkillsBehavioursAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISkillsBehavioursAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedBusinessLogic" mapTo="DevelopmentNeedBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IDevelopmentNeedRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCatalogBusinessLogic" mapTo="DevelopmentNeedCatalogBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IDevelopmentNeedCatalogRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ISynthesisOverallAppraisalBusinessLogic" mapTo="SynthesisOverallAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ISynthesisOverallAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IOverallAnnualAppraisalBusinessLogic" mapTo="OverallAnnualAppraisalBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IOverallAnnualAppraisalRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalDevelopmentBusinessLogic" mapTo="ProfessionalDevelopmentBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IProfessionalDevelopmentRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IProfessionalDevelopmentNeedBusinessLogic" mapTo="ProfessionalDevelopmentNeedBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IProfessionalDevelopmentNeedRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPAHRBusinessLogic" mapTo="APAHRBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IAPAHRRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPAEmployeeDataBusinessLogic" mapTo="APAEmployeeDataBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IAPAEmployeeDataRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IAPARatingBusinessLogic" mapTo="APARatingBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IAPARatingRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGeneralDataStatusLangBusinessLogic" mapTo="GeneralDataStatusLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGeneralDataStatusLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInputExceptionBusinessLogic" mapTo="ApaInputExceptionBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApaInputExceptionRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInformationStatusLangBusinessLogic" mapTo="ApaInformationStatusLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApaInformationStatusLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IApaInformationStatusBusinessLogic" mapTo="ApaInformationStatusBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IApaInformationStatusRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IDevelopmentNeedCatalogLangBusinessLogic" mapTo="DevelopmentNeedCatalogLangBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IDevelopmentNeedCatalogLangRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGeneralDataStatusBusinessLogic" mapTo="GeneralDataStatusBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGeneralDataStatusRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IReportDefinitionBusinessLogic" mapTo="ReportDefinitionBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IReportDefinitionRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITrainingCatalogBusinessLogic" mapTo="TrainingCatalogBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ITrainingCatalogRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ITrainingAreaBusinessLogic" mapTo="TrainingAreaBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="ITrainingAreaRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataTrainingAreaBusinessLogic" mapTo="EmployeeGeneralDataTrainingAreaBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IEmployeeGeneralDataTrainingAreaRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeGeneralDataTrainingCatalogBusinessLogic" mapTo="EmployeeGeneralDataTrainingCatalogBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IEmployeeGeneralDataTrainingCatalogRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IEmployeeBusinessLogic" mapTo="EmployeeBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IEmployeeRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IGroupStatusChangeLogBusinessLogic" mapTo="GroupStatusChangeLogBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IGroupStatusChangeLogRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IIndividualDevelopmentPlanBusinessLogic" mapTo="IndividualDevelopmentPlanBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IIndividualDevelopmentPlanRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IPerformanceImprovementPlanBusinessLogic" mapTo="PerformanceImprovementPlanBusinessLogic">
            <lifetime type="PerWebRequest"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="repository" parameterType="IPerformanceImprovementPlanRepository">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <!--Controllers-->
          <type type="UserController">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="service" parameterType="IUserBusinessLogic">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="RoleAdminController">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="service" parameterType="IRoleBusinessLogic">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="LanguageController">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="service" parameterType="ILanguageBusinessLogic">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="LanguageItemController">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="service" parameterType="ILanguageItemBusinessLogic">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>

          <!--<type type="APAController">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="service" parameterType="IAPAInformationBusinessLogic">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>-->
        </types>
      </container>
    </containers>
  </unity>
</configuration>
